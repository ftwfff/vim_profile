
a.out:     file format elf32-i386


Disassembly of section .init:

08048338 <_init>:
 8048338:	53                   	push   %ebx
 8048339:	83 ec 08             	sub    $0x8,%esp
 804833c:	e8 00 00 00 00       	call   8048341 <_init+0x9>
 8048341:	5b                   	pop    %ebx
 8048342:	81 c3 b3 1c 00 00    	add    $0x1cb3,%ebx
 8048348:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804834e:	85 c0                	test   %eax,%eax
 8048350:	74 05                	je     8048357 <_init+0x1f>
 8048352:	e8 69 00 00 00       	call   80483c0 <__gmon_start__@plt>
 8048357:	e8 14 01 00 00       	call   8048470 <frame_dummy>
 804835c:	e8 2f 02 00 00       	call   8048590 <__do_global_ctors_aux>
 8048361:	83 c4 08             	add    $0x8,%esp
 8048364:	5b                   	pop    %ebx
 8048365:	c3                   	ret    

Disassembly of section .plt:

08048370 <printf@plt-0x10>:
 8048370:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048376:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804837c:	00 00                	add    %al,(%eax)
	...

08048380 <printf@plt>:
 8048380:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048386:	68 00 00 00 00       	push   $0x0
 804838b:	e9 e0 ff ff ff       	jmp    8048370 <_init+0x38>

08048390 <gets@plt>:
 8048390:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048396:	68 08 00 00 00       	push   $0x8
 804839b:	e9 d0 ff ff ff       	jmp    8048370 <_init+0x38>

080483a0 <__stack_chk_fail@plt>:
 80483a0:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483a6:	68 10 00 00 00       	push   $0x10
 80483ab:	e9 c0 ff ff ff       	jmp    8048370 <_init+0x38>

080483b0 <puts@plt>:
 80483b0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483b6:	68 18 00 00 00       	push   $0x18
 80483bb:	e9 b0 ff ff ff       	jmp    8048370 <_init+0x38>

080483c0 <__gmon_start__@plt>:
 80483c0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483c6:	68 20 00 00 00       	push   $0x20
 80483cb:	e9 a0 ff ff ff       	jmp    8048370 <_init+0x38>

080483d0 <__libc_start_main@plt>:
 80483d0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483d6:	68 28 00 00 00       	push   $0x28
 80483db:	e9 90 ff ff ff       	jmp    8048370 <_init+0x38>

Disassembly of section .text:

080483e0 <_start>:
 80483e0:	31 ed                	xor    %ebp,%ebp
 80483e2:	5e                   	pop    %esi
 80483e3:	89 e1                	mov    %esp,%ecx
 80483e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483e8:	50                   	push   %eax
 80483e9:	54                   	push   %esp
 80483ea:	52                   	push   %edx
 80483eb:	68 80 85 04 08       	push   $0x8048580
 80483f0:	68 10 85 04 08       	push   $0x8048510
 80483f5:	51                   	push   %ecx
 80483f6:	56                   	push   %esi
 80483f7:	68 94 84 04 08       	push   $0x8048494
 80483fc:	e8 cf ff ff ff       	call   80483d0 <__libc_start_main@plt>
 8048401:	f4                   	hlt    
 8048402:	90                   	nop
 8048403:	90                   	nop
 8048404:	90                   	nop
 8048405:	90                   	nop
 8048406:	90                   	nop
 8048407:	90                   	nop
 8048408:	90                   	nop
 8048409:	90                   	nop
 804840a:	90                   	nop
 804840b:	90                   	nop
 804840c:	90                   	nop
 804840d:	90                   	nop
 804840e:	90                   	nop
 804840f:	90                   	nop

08048410 <__do_global_dtors_aux>:
 8048410:	55                   	push   %ebp
 8048411:	89 e5                	mov    %esp,%ebp
 8048413:	53                   	push   %ebx
 8048414:	83 ec 04             	sub    $0x4,%esp
 8048417:	80 3d 20 a0 04 08 00 	cmpb   $0x0,0x804a020
 804841e:	75 3f                	jne    804845f <__do_global_dtors_aux+0x4f>
 8048420:	a1 24 a0 04 08       	mov    0x804a024,%eax
 8048425:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804842a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048430:	c1 fb 02             	sar    $0x2,%ebx
 8048433:	83 eb 01             	sub    $0x1,%ebx
 8048436:	39 d8                	cmp    %ebx,%eax
 8048438:	73 1e                	jae    8048458 <__do_global_dtors_aux+0x48>
 804843a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048440:	83 c0 01             	add    $0x1,%eax
 8048443:	a3 24 a0 04 08       	mov    %eax,0x804a024
 8048448:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804844f:	a1 24 a0 04 08       	mov    0x804a024,%eax
 8048454:	39 d8                	cmp    %ebx,%eax
 8048456:	72 e8                	jb     8048440 <__do_global_dtors_aux+0x30>
 8048458:	c6 05 20 a0 04 08 01 	movb   $0x1,0x804a020
 804845f:	83 c4 04             	add    $0x4,%esp
 8048462:	5b                   	pop    %ebx
 8048463:	5d                   	pop    %ebp
 8048464:	c3                   	ret    
 8048465:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048470 <frame_dummy>:
 8048470:	55                   	push   %ebp
 8048471:	89 e5                	mov    %esp,%ebp
 8048473:	83 ec 18             	sub    $0x18,%esp
 8048476:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804847b:	85 c0                	test   %eax,%eax
 804847d:	74 12                	je     8048491 <frame_dummy+0x21>
 804847f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048484:	85 c0                	test   %eax,%eax
 8048486:	74 09                	je     8048491 <frame_dummy+0x21>
 8048488:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 804848f:	ff d0                	call   *%eax
 8048491:	c9                   	leave  
 8048492:	c3                   	ret    
 8048493:	90                   	nop

08048494 <main>:
 8048494:	55                   	push   %ebp
 8048495:	89 e5                	mov    %esp,%ebp
 8048497:	83 e4 f0             	and    $0xfffffff0,%esp
 804849a:	83 ec 60             	sub    $0x60,%esp
 804849d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80484a3:	89 44 24 5c          	mov    %eax,0x5c(%esp)
 80484a7:	31 c0                	xor    %eax,%eax
 80484a9:	b8 e0 85 04 08       	mov    $0x80485e0,%eax
 80484ae:	8d 54 24 1c          	lea    0x1c(%esp),%edx
 80484b2:	89 54 24 04          	mov    %edx,0x4(%esp)
 80484b6:	89 04 24             	mov    %eax,(%esp)
 80484b9:	e8 c2 fe ff ff       	call   8048380 <printf@plt>
 80484be:	c7 04 24 e4 85 04 08 	movl   $0x80485e4,(%esp)
 80484c5:	e8 e6 fe ff ff       	call   80483b0 <puts@plt>
 80484ca:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80484ce:	89 04 24             	mov    %eax,(%esp)
 80484d1:	e8 ba fe ff ff       	call   8048390 <gets@plt>
 80484d6:	b8 f6 85 04 08       	mov    $0x80485f6,%eax
 80484db:	8d 54 24 1c          	lea    0x1c(%esp),%edx
 80484df:	89 54 24 04          	mov    %edx,0x4(%esp)
 80484e3:	89 04 24             	mov    %eax,(%esp)
 80484e6:	e8 95 fe ff ff       	call   8048380 <printf@plt>
 80484eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80484f0:	8b 54 24 5c          	mov    0x5c(%esp),%edx
 80484f4:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80484fb:	74 05                	je     8048502 <main+0x6e>
 80484fd:	e8 9e fe ff ff       	call   80483a0 <__stack_chk_fail@plt>
 8048502:	c9                   	leave  
 8048503:	c3                   	ret    
 8048504:	90                   	nop
 8048505:	90                   	nop
 8048506:	90                   	nop
 8048507:	90                   	nop
 8048508:	90                   	nop
 8048509:	90                   	nop
 804850a:	90                   	nop
 804850b:	90                   	nop
 804850c:	90                   	nop
 804850d:	90                   	nop
 804850e:	90                   	nop
 804850f:	90                   	nop

08048510 <__libc_csu_init>:
 8048510:	55                   	push   %ebp
 8048511:	57                   	push   %edi
 8048512:	56                   	push   %esi
 8048513:	53                   	push   %ebx
 8048514:	e8 69 00 00 00       	call   8048582 <__i686.get_pc_thunk.bx>
 8048519:	81 c3 db 1a 00 00    	add    $0x1adb,%ebx
 804851f:	83 ec 1c             	sub    $0x1c,%esp
 8048522:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048526:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804852c:	e8 07 fe ff ff       	call   8048338 <_init>
 8048531:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048537:	29 c7                	sub    %eax,%edi
 8048539:	c1 ff 02             	sar    $0x2,%edi
 804853c:	85 ff                	test   %edi,%edi
 804853e:	74 29                	je     8048569 <__libc_csu_init+0x59>
 8048540:	31 f6                	xor    %esi,%esi
 8048542:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048548:	8b 44 24 38          	mov    0x38(%esp),%eax
 804854c:	89 2c 24             	mov    %ebp,(%esp)
 804854f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048553:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048557:	89 44 24 04          	mov    %eax,0x4(%esp)
 804855b:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048562:	83 c6 01             	add    $0x1,%esi
 8048565:	39 fe                	cmp    %edi,%esi
 8048567:	75 df                	jne    8048548 <__libc_csu_init+0x38>
 8048569:	83 c4 1c             	add    $0x1c,%esp
 804856c:	5b                   	pop    %ebx
 804856d:	5e                   	pop    %esi
 804856e:	5f                   	pop    %edi
 804856f:	5d                   	pop    %ebp
 8048570:	c3                   	ret    
 8048571:	eb 0d                	jmp    8048580 <__libc_csu_fini>
 8048573:	90                   	nop
 8048574:	90                   	nop
 8048575:	90                   	nop
 8048576:	90                   	nop
 8048577:	90                   	nop
 8048578:	90                   	nop
 8048579:	90                   	nop
 804857a:	90                   	nop
 804857b:	90                   	nop
 804857c:	90                   	nop
 804857d:	90                   	nop
 804857e:	90                   	nop
 804857f:	90                   	nop

08048580 <__libc_csu_fini>:
 8048580:	f3 c3                	repz ret 

08048582 <__i686.get_pc_thunk.bx>:
 8048582:	8b 1c 24             	mov    (%esp),%ebx
 8048585:	c3                   	ret    
 8048586:	90                   	nop
 8048587:	90                   	nop
 8048588:	90                   	nop
 8048589:	90                   	nop
 804858a:	90                   	nop
 804858b:	90                   	nop
 804858c:	90                   	nop
 804858d:	90                   	nop
 804858e:	90                   	nop
 804858f:	90                   	nop

08048590 <__do_global_ctors_aux>:
 8048590:	55                   	push   %ebp
 8048591:	89 e5                	mov    %esp,%ebp
 8048593:	53                   	push   %ebx
 8048594:	83 ec 04             	sub    $0x4,%esp
 8048597:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 804859c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804859f:	74 13                	je     80485b4 <__do_global_ctors_aux+0x24>
 80485a1:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 80485a6:	66 90                	xchg   %ax,%ax
 80485a8:	83 eb 04             	sub    $0x4,%ebx
 80485ab:	ff d0                	call   *%eax
 80485ad:	8b 03                	mov    (%ebx),%eax
 80485af:	83 f8 ff             	cmp    $0xffffffff,%eax
 80485b2:	75 f4                	jne    80485a8 <__do_global_ctors_aux+0x18>
 80485b4:	83 c4 04             	add    $0x4,%esp
 80485b7:	5b                   	pop    %ebx
 80485b8:	5d                   	pop    %ebp
 80485b9:	c3                   	ret    
 80485ba:	90                   	nop
 80485bb:	90                   	nop

Disassembly of section .fini:

080485bc <_fini>:
 80485bc:	53                   	push   %ebx
 80485bd:	83 ec 08             	sub    $0x8,%esp
 80485c0:	e8 00 00 00 00       	call   80485c5 <_fini+0x9>
 80485c5:	5b                   	pop    %ebx
 80485c6:	81 c3 2f 1a 00 00    	add    $0x1a2f,%ebx
 80485cc:	e8 3f fe ff ff       	call   8048410 <__do_global_dtors_aux>
 80485d1:	83 c4 08             	add    $0x8,%esp
 80485d4:	5b                   	pop    %ebx
 80485d5:	c3                   	ret    
