#include "stdio.h"
#include "unistd.h"
#include <stdlib.h>
#include <stdio.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include "pthread.h"
/*#include "file.h"*/

/* #define puts printf */
void fnExit1(void)
{
    printf("exit function 1.\n");
    fflush(stdout);
}
void fnExit2(void)
{
    printf("exit function 2\n");
    fflush(stdout);
}
/*void main()*/
/*{*/
/*    printf("hello world!");*/
/*}*/
static int aaa3;
/*#include "csapp.h"*/
static int aaa2;
static int aaa;
static int i;

pthread_mutex_t mutex;
int main() {  
  printf("Main function.\n");
  atexit(fnExit1);
  atexit(fnExit2);
  /* return 0; */
                                /* _Exit(1); */
    exit(1);





/*   char name[64];  */
/* int bbb; */
 /* printf("Hello, %s!\n", name);  */
/*    FILE *fd = fopen("/bin/ls", "r");*/
/*    if(fd)*/
char c ;
    int fd, ret=-1;
char buff_1[10];
/*    fd = open("./123", "O_RDWR");*/
/*    fd = open("aaa", O_RDWR|O_CREAT|O_APPEND, 0666);*/
    pthread_mutex_init(&mutex, NULL);
    printf("from par this print pid = %d\n", getpid());
/*    ret = fork();*/
    i++;
    sleep(1);
    pthread_mutex_lock(&mutex);
    fd = open("aaa", O_RDWR|O_CREAT, 0666);
    read(fd, &c, 1); 
    printf("read: %c", c);
    read(fd, buff_1, 2); 
    printf("read: %s", buff_1);
    fd = open("aaa", O_RDWR|O_CREAT, 0666);
    read(fd, buff_1, 2); 
    printf("read: %s", buff_1);
    fd = open("aaa", O_RDWR|O_CREAT, 0666);
    printf("fork ret = %d ,i= %d, i's addr = %x, pid = %d parent pid = %d\n", ret, i, &i, getpid(), getppid());


    FILE *fdfile;
    fdfile= fopen("aaa","rw+" );
    
    fdfile= fopen("aaa","rw+" );
    fdfile= fopen("aaa","rw+" );
    fdfile= fopen("aaa","rw+" );
    fdfile= fopen("aaa","rw+" );
    
#if 0
    if((fd=open("aaa", O_CREAT|O_RDWR|O_APPEND, 0666)) == -1){
/* S_IRUSR | S_IWUSR)) == -1){*/
    write(2, "open file error", 10);
}
#endif
    if(fd <0)
       write(2, "open error\n", 6);
    else
    printf("fd = %d\n", fd);
    ret= write(fd, "abcdefg\n\0\0", 10);
    if(ret <0)
        printf("write failed\n");
/*    close(fd);*/
    char buff[50];


    fd = open("aaa", O_RDWR|O_CREAT, 0666);
    printf("fd = %d\n", fd);
/*    if(fd <0)*/
    ret= read(fd, buff, 10);
    if(ret <0)
        printf("read failed\n");
    else
        printf("read buffer: %s\n", buff);
    close(fd);
    exit(0);
    pthread_mutex_unlock(&mutex);    
/*while(read(STDIN_FILENO, &c,1)!=0)*/
/*    write(STDOUT_FILENO, &c, 1);*/
/*while(read(stdin, &c,1)!=0)*/
/*    write(stdout, &c, 1);*/

/*  int ret= fork();*/
/*  printf("main int ret = %d\n", ret);*/
/*  while(1);*/
  return 0; 
}
